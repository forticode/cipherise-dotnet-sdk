<Project>
    <PropertyGroup>
        <!-- 
        'Visual Studio Command Prompt' sets this. But current DocFx builds bombs out when this is set when calling msbuild.exe.
        Although its set to blank here, it doesnt actaully do anything (and therefore still bombs out).
        Its here as a reminder.
        See https://github.com/dotnet/docfx/issues/4782.  Fixed as of Oct 2019 but not tested.
        -->
        <VSINSTALLDIR></VSINSTALLDIR>
    </PropertyGroup>
    
    <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />

    <PropertyGroup Condition="!$(IsWindows)">
        <BuildDocFx>false</BuildDocFx>
    </PropertyGroup>

    <PropertyGroup>
        <!-- DocFX Log and output folder-->
        <DocFXOutputFolder>$(OutputPath)DocFX\</DocFXOutputFolder>
        <LogFile>$(DocFXOutputFolder)DocFXlog.txt</LogFile>
        <LogLevel>Warning</LogLevel>

        <!-- Summary: docfx.json (build.content.src) doesnt accomodate for "-o Some/Where/Else"
             DocFX uses MetadataOutputFolder for the '-o'  command line switch.  See docfx.console.targets.
             This causees the generated metadata (CS api) not to found when docfx.json (build.content.src)
             This issue can be seen by running docfx from the command line:
               docfx -o Some/Where/Else
             So although it would be nice to do the following line.  It wont work:
                <MetadataOutputFolder>$(DocFXOutputFolder).</MetadataOutputFolder>
        -->
        <MetadataOutputFolder>.</MetadataOutputFolder>
        <DocParameters>--maxParallelism 1</DocParameters>
    </PropertyGroup>

    <ItemGroup>
        <None Include="api\index.md" />
        <None Include="articles\sample.md" />
        <None Include="articles\toc.md" />
        <None Include="docfx.json" />
        <None Include="docfxfilter.yml" />
        <None Include="index.md" />
        <None Include="license\license.md" />
        <None Include="license\toc.md" />
        <None Include="startpage\*.md" />
        <None Include="startpage\*.cs" />
        <None Include="toc.yml" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="images\CipheriseSmall.png" />
        <Content Include="images\CipheriseMedium.png" />
    </ItemGroup>

    <PropertyGroup>
        <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
        <EnableDefaultNoneItems>false</EnableDefaultNoneItems>
        <EnableDefaultItems>false</EnableDefaultItems>
        <CopyOutputSymbolsToOutputDirectory>false</CopyOutputSymbolsToOutputDirectory>

        <CopyBuildOutputToOutputDirectory>false</CopyBuildOutputToOutputDirectory>
        <CopyBuildOutputToPublishDirectory>false</CopyBuildOutputToPublishDirectory>
        <CopyOutputSymbolsToPublishDirectory>false</CopyOutputSymbolsToPublishDirectory>

        <SkipCopyBuildProduct>true</SkipCopyBuildProduct>
    </PropertyGroup>

    <Target Name="DocFX_AfterClean" AfterTargets="Clean" Condition="$(TargetFramework) != '' AND $(TargetFrameworks.StartsWith($(TargetFramework)))">
        <Message Importance="high" Text="DocFX_AfterClean:  $(DocFXOutputFolder) TargetFrameworks = $(TargetFrameworks)  TargetFramework = $(TargetFramework)" />
        <RemoveDir Directories="$(DocFXOutFolder)" />
        <MSBuild Projects="$(MSBuildProjectFile)" Targets="DocFX_RemoveFolders" Properties="Caller='DocFX_AfterClean'"/>
    </Target>

    <Target Name="DocFX_BeforeBuild" BeforeTargets="BeforeBuild" Condition="'$(BuildDocFx)' != 'false'">
        <Message Importance="high" Text="DocFX_BeforeBuild: TargetFrameworks = $(TargetFrameworks)  TargetFramework = $(TargetFramework)" />
        <PropertyGroup>
            <FirstFramework>$(TargetFrameworks.StartsWith($(TargetFramework)))</FirstFramework>
            <BuildDocFx>$(FirstFramework)</BuildDocFx>
        </PropertyGroup>
        <Message Importance="high" Text="DocFX_BeforeBuild: BuildDocFx = $(BuildDocFx)" />
    </Target>

    <Target Name="DocFX_AfterDocGenerateMetadata" AfterTargets="DocGenerateMetadata">
        <Message Importance="high" Text="DocFX_AfterDocGenerateMetadata: TargetFrameworks = $(TargetFrameworks)  TargetFramework = $(TargetFramework)" />
        <ItemGroup>
            <DocFXSite Include="$(MetadataOutputFolder)\_CipheriseSite\**\*.*"/>
        </ItemGroup>
        <!-- Move  _CipheriseSite to bin/DocFX/_CipheriseSite -->
        <Move  SourceFiles="@(DocFXSite)"
               DestinationFiles="@(DocFXSite->'$(DocFXOutputFolder)_CipheriseSite\%(RecursiveDir)%(Filename)%(Extension)')"
               Condition="$(BuildDocFx)"/>
        <MSBuild Projects="$(MSBuildProjectFile)" Targets="DocFX_RemoveFolders" Properties="Caller='DocFX_AfterDocGenerateMetadata'" Condition="$(BuildDocFx)" />
    </Target>

    <Target Name="DocFX_RemoveFolders">
        <Message Importance="high" Text="DocFX_RemoveFolders called by $(Caller)" />
        <RemoveDir Directories="$(MetadataOutputFolder)\_CipheriseSite" />
        <RemoveDir Directories=".\obj\api" />
    </Target>

    <Target Name="DocFX_UpdateVersionMD" AfterTargets="DocFX_BeforeBuild" Condition ="$(BuildDocFx)">
        <XmlPeek 
                 XmlInputPath="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))"
                 Query="Project/PropertyGroup/Version/text()">
            <Output TaskParameter="Result" ItemName="CipheriseSDKVersion" />
        </XmlPeek>

        <PropertyGroup>
            <CipheriseSDKVersion>v@(CipheriseSDKVersion)</CipheriseSDKVersion>
            <CipheriseSDKVersion>$(CipheriseSDKVersion.SubString(0,$(CipheriseSDKVersion.LastIndexOf('.'))))</CipheriseSDKVersion>
        </PropertyGroup>

        <Message Importance="high" Text="CipheriseSDKVersion = $(CipheriseSDKVersion)"/>
        <WriteTextToFile FilePath="startpage\version.md"  Text="$(CipheriseSDKVersion)" />
    </Target>

    <UsingTask
        TaskName="WriteTextToFile"
        TaskFactory="CodeTaskFactory"
        AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >
        <ParameterGroup>
            <FilePath ParameterType="System.String" Required="true" />
            <Text     ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Using Namespace="System" />
            <Using Namespace="System.IO" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                System.IO.File.WriteAllText(FilePath, Text);
                return true;
                ]]>
            </Code>
        </Task>
    </UsingTask>

    <Target Name="CreateManifestResourceNames" />
    <Target Name="CoreCompile" />
    <!--
  <Target Name="CreateManifestResourceNames" />
  <Target Name="CoreCompile" />
  <Target Name="CopyFilesToOutputDirectory" />
  <Target Name="CopyFilesToPublishDirectory" />
-->
</Project>